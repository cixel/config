set-option -g default-shell /bin/zsh
set -s escape-time 0
set -g default-terminal "screen-256color"
# set -ag terminal-overrides ',*:cud1=\E[1B'
# set -g terminal-overrides ',screen-256color:Tc ,xterm-256color:Tc'

set -g base-index 1
set -g pane-base-index 1

#set -g status-right "| #(hostname) "
#set -g status-right '%H:%M:%S %d-%b-%y'
#set -g status-right '#(tmux-mem-cpu-load) %H:%M:%S %d-%b-%y'
#set -g status-right 'batt: #{battery_percentage} | #(tmux-mem-cpu-load) | %H:%M:%S %d-%b-%y'
set -g status-right 'batt: #{battery_percentage} | %l:%M:%S %p %d-%b-%y'
set -g status-right-length 80

#### COLOUR (Solarized dark)

# default statusbar colors
# set-option -g status-bg black #base02
set-option -g status-bg default #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
set-option -g pane-border-fg default #base02
set-option -g pane-border-bg default #base02
set-option -g pane-active-border-fg blue #base01
set-option -g pane-active-border-bg default #base01
# set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

#### Tmux Plugin Manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#### tmux resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

#### battery life status
set -g @plugin 'tmux-plugins/tmux-battery'

#### remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
#set-option -g prefix `
#bind-key ` send-prefix

#### mouse mode
set -g mouse on

#### vim navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# (custom) same bindings, but in vi copy mode
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys -X C-h"  "select-pane -L"
bind-key -T copy-mode-vi C-j if-shell "$is_vim" "send-keys -X C-j"  "select-pane -D"
bind-key -T copy-mode-vi C-k if-shell "$is_vim" "send-keys -X C-k"  "select-pane -U"
bind-key -T copy-mode-vi C-l if-shell "$is_vim" "send-keys -X C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-\ if-shell "$is_vim" "send-keys -X C-\\" "select-pane -l"

#### so that i can programatically change title from vim
set-option -g set-titles on

#### rebinding split vertical (prefix + %)
bind-key v split-window -h

#### copy to keyboard with vim binding
set-option -g default-command "reattach-to-user-namespace -l zsh"
# Use vim keybindings in copy mode
setw -g mode-keys vi
#bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

#### prefix + prefix window swapping
bind-key a last-window
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
