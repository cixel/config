set-option -g default-shell /bin/zsh
set -s escape-time 0
set -g default-terminal "screen-256color"

set -g base-index 1
set -g pane-base-index 1

#### Tmux Plugin Manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

#### tmux resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

#### battery life status
set -g @plugin 'tmux-plugins/tmux-battery'
#### cpu percent status
set -g @plugin 'tmux-plugins/tmux-cpu'

#### remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
#set-option -g prefix `
#bind-key ` send-prefix

#### mouse mode
set -g mouse on

#### vim navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# (custom) same bindings, but in vi copy mode
bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys -X C-h"  "select-pane -L"
bind-key -T copy-mode-vi C-j if-shell "$is_vim" "send-keys -X C-j"  "select-pane -D"
bind-key -T copy-mode-vi C-k if-shell "$is_vim" "send-keys -X C-k"  "select-pane -U"
bind-key -T copy-mode-vi C-l if-shell "$is_vim" "send-keys -X C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-\ if-shell "$is_vim" "send-keys -X C-\\" "select-pane -l"

#### so that i can programatically change title from vim
set-option -g set-titles on

#### rebinding split vertical (prefix + %)
bind-key v split-window -h

##### copy to keyboard with vim binding
#set-option -g default-command "reattach-to-user-namespace -l zsh"
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" # OSX ONLY
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

#### prefix + prefix window swapping
bind-key a last-window
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

## COLORSCHEME: gruvbox dark
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour247, bg=colour241] #S "
set-option -g status-right '#[fg=colour246, bg=colour237, nobold, nounderscore, noitalics] cpu: #{cpu_percentage} #[fg=colour246,bg=colour239] batt: #{battery_percentage} #[fg=colour237, bg=colour248] %l:%M %p %a %d-%b-%y '

set-window-option -g window-status-current-format "#[fg=colour239, bg=colour214] #I:#[fg=colour239, bg=colour214, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
# set-window-option -g window-status-current-format "#[fg=colour239, bg=colour247] #I:#[fg=colour239, bg=colour247, bold] #W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format         "#[fg=colour223, bg=colour239] #I:#[fg=colour223, bg=colour239      ] #W #[fg=colour239, bg=colour237, noitalics]"
# END COLORSCHEME

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
